= Site Language

Uses Globalize2 to let you translate pages, page parts and snippets.
If you are still working with Radiant < 0.7, you can check out
http://github.com/jomz/site_language/commits/pre-radiant-0.7
This version still works with the original globalize, but stopped working after 0.6.9.

Allows you to translate pages (title, slug, keywords, ...), page parts and snippets, using the globalize plugin.

== Installation:

1. You need to be on rails 2.2, which means Radiant edge at the moment, so you'll need to

  rake radiant:freeze:edge
  
2. If you have not installed the extension yet, do a

  rake ray:ext name=site_language hub=jomz
  
or
  
  git submodule add git://github.com/jomz/radiant-site_language-extension.git vendor/extensions

3. cd into the site_language folder to init and update the globalize2 submodule;

  cd vendor/extensions/site_language
  git submodule init; git submodule update
  cd ../../..
  
4. If you do not want English to be the default language, set the default language like so:

  Radiant::Config["site_language.default_language"] = 'fr'
  
5. Run the migrations and update tasks

  rake db:migrate:extensions
  
6. Start the server and go to the "Languages" tab in the admin, add some language-codes (en-UK, nl-BE, ...)

7. Reboot the server, and translate away!

== Available tags:

  <r:sitelanguages:nav />
  
Returns an <ul>-based language navigation. It will put a "current" class on the current language link, and you can hide languages from it by setting so under the Languages tab. 
The links will go to the translated url of the current page, i.e. not the homepage.
Also, if you have set up a domain for a certain language, the link will point to the correct domain. 

  <r:langcode />
  
Returns the language code for the currently set language.

  <r:sitelanguages:each> .. </r:sitelanguages:each>
  
Allows you to loop over each site language

  <r:translated_slug [lang="nl"] />
  
Will provide the translated slug of a page

== Overridden tags:

<r:link /> and <r:breadcrumbs/> have been made site_language-aware

Beware that you may have other extensions that also override these tags, i.e. the trike_tags extension.
This would result in r:link tags not prefixing the link with the language part, i.e. /about-us instead of /en/about-us
If this is the case, you'll want to make sure that the site_language is loaded after other extensions that override the standard tags. You can change the load order for extensions in config/environment.rb;

  config.extensions = [ :all, :site_language ]